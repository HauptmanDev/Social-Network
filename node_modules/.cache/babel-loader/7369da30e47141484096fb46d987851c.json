{"ast":null,"code":"import _objectSpread from \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst DELETE_POST = 'DELETE-POST';\nconst CHANGE_AVATAR = 'CHANGE-AVATAR';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Привет, всем!',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: 'Пока, всем!',\n    likesCount: 1\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 3,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          posts: [...state.posts, newPost]\n        });\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, state, {\n          posts: state.posts.filter(p => {// p.id != action.postId // почему ошибка??\n          })\n        });\n      }\n\n    case CHANGE_AVATAR:\n      {\n        return _objectSpread({}, state, {\n          profile: _objectSpread({}, state.profile, {\n            photos: action.photos\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => {\n  return {\n    type: ADD_POST,\n    newPostText\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\nexport const deletePost = postId => {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport const changeAvatar = photos => {\n  return {\n    type: CHANGE_AVATAR,\n    photos\n  };\n};\nexport const getUserProfile = userId => async dispatch => {\n  let response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(changeAvatar(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  let userId = getState().auth.userId;\n  let response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n    dispatch(stopSubmit('edit-profile', {\n      _error: message\n    }));\n    return Promise.reject(message);\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["Q:\\IT-kam\\socnet\\Social-Network\\src\\redux\\profile-reducer.js"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","CHANGE_AVATAR","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","photos","addPostActionCreator","setUserProfile","setStatus","deletePost","postId","changeAvatar","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","messages","length","_error","Promise","reject"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\nconst CHANGE_AVATAR = 'CHANGE-AVATAR';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, всем!', likesCount: 0},\r\n        {id: 2, message: 'Пока, всем!', likesCount: 1},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost],};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => {\r\n                    // p.id != action.postId // почему ошибка??\r\n                })\r\n            };\r\n        }\r\n        case CHANGE_AVATAR: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    }\r\n};\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    }\r\n};\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST, postId\r\n    }\r\n};\r\nexport const changeAvatar = (photos) => {\r\n    return {\r\n        type: CHANGE_AVATAR, photos\r\n    }\r\n};\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(changeAvatar(response.data.data.photos))\r\n    }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    let userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('edit-profile', {_error: message}));\r\n        return Promise.reject(message)\r\n    }\r\n};\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}