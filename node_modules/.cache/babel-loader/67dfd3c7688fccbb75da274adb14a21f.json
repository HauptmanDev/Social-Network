{"ast":null,"code":"import _slicedToArray from \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/telegram.svg\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto\n}) => {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  useEffect(() => {// setStatus(props.status)\n  }, [props.status]);\n\n  if (!profile) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  const onMainPhotoSelected = e => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const goToEditMode = () => {};\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.descriptionBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: profile.photos.large || userPhoto,\n    className: s.mainPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), isOwner && React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onMainPhotoSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), editMode ? React.createElement(ProfileDataForm, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(ProfileData, {\n    goToEditMode: goToEditMode,\n    isOwner: isOwner,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ProfileStatusWithHooks, {\n    status: status,\n    updateStatus: updateStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nconst ProfileData = ({\n  profile,\n  isOwner,\n  goToEditMode\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, isOwner && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: goToEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"edit\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Full name\"), \": \", profile.fullName), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Locking for a job\"), \": \", profile.lookingForAJob ? 'yes' : 'no'), profile.lookingForAJob && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"My professional skills\"), \": \", profile.lookingForAJobDescription), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"About me\"), \": \", profile.aboutMe ? 'yes' : 'no'), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Contacts\"), \":\", Object.keys(profile.contacts).map(key => {\n    return React.createElement(Contact, {\n      key: key,\n      contactTitle: key,\n      contactValue: profile.contacts[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  })));\n};\n\nconst ProfileDataForm = () => {};\n\nconst Contact = ({\n  contactTitle,\n  contactValue\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, contactTitle), \": \", contactValue);\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useState","useEffect","s","Preloader","ProfileStatusWithHooks","ProfileInfo","profile","status","updateStatus","isOwner","savePhoto","editMode","setEditMode","props","onMainPhotoSelected","e","target","files","length","goToEditMode","descriptionBlock","photos","large","userPhoto","mainPhoto","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","ProfileDataForm","Contact","contactTitle","contactValue"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/telegram.svg'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n\r\n    let [editMode, setEditMode] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const goToEditMode = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                {editMode ? <ProfileDataForm profile={profile}/> :\r\n                    <ProfileData goToEditMode={goToEditMode} isOwner={isOwner} profile={profile}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>)\r\n};\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Locking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe ? 'yes' : 'no'}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n};\r\nconst ProfileDataForm = () => {\r\n};\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}