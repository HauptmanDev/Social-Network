{"ast":null,"code":"import _slicedToArray from \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React, { useState } from 'react';\nimport s from './Paginator.module.css';\n\nlet Paginator = ({\n  currentPage,\n  onPageChanged,\n  totalItemsCount,\n  pageSize,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  const clickLeft = () => {\n    setPortionNumber(portionNumber - 1);\n  };\n\n  const clickRight = () => {\n    setPortionNumber(portionNumber + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, portionNumber > 1 && React.createElement(\"button\", {\n    onClick: clickLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"L\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return React.createElement(\"span\", {\n      className: currentPage === p && s.selectedPage,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, p);\n  }), portionCount > portionNumber && React.createElement(\"button\", {\n    onClick: clickRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"R\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","s","Paginator","currentPage","onPageChanged","totalItemsCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","clickLeft","clickRight","filter","p","map","selectedPage","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,wBAAd;;AAEA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,eAA7B;AAA8CC,EAAAA,QAA9C;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA+E;AAC3F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;;AAN2F,kBAOpDP,QAAQ,CAAC,CAAD,CAP4C;AAAA;AAAA,MAOtFe,aAPsF;AAAA,MAOvEC,gBAPuE;;AAQ3F,MAAIC,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;;AACA,QAAMY,SAAS,GAAG,MAAM;AACpBH,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,GAFD;;AAGA,QAAMK,UAAU,GAAG,MAAM;AACrBJ,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,GAFD;;AAGA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFA,aAAa,GAAG,CAAhB,IAAqB;AAAQ,IAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB,EAEFR,KAAK,CACDU,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIL,qBAAL,IAA8BK,CAAC,IAAIJ,sBADnD,EAEIK,GAFJ,CAEQD,CAAC,IAAI;AACN,WAAO;AAAM,MAAA,SAAS,EAAEnB,WAAW,KAAKmB,CAAhB,IAAqBrB,CAAC,CAACuB,YAAxC;AACM,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZrB,QAAAA,aAAa,CAACkB,CAAD,CAAb;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGUA,CAHV,CAAP;AAIH,GAPJ,CAFE,EAUFR,YAAY,GAAGC,aAAf,IAAgC;AAAQ,IAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAV9B,CAAP;AAYH,CA5BD;;AA6BA,eAAelB,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\nlet Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber]= useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    const clickLeft = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    };\r\n    const clickRight = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n    };\r\n    return <div>\r\n        {portionNumber > 1 && <button onClick={clickLeft}>L</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span className={currentPage === p && s.selectedPage}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber && <button onClick={clickRight}>R</button>}\r\n    </div>\r\n};\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}