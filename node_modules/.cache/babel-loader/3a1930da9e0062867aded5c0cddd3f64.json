{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"9ae69435-2b9a-40bc-b874-7a6c240dae36\" // \"API-KEY\": \"f6e2860d-1291-43ec-8245-d627ef75db33\" ок, вроде должно работать\n\n  }\n});\nexport const usersAPI = {\n  getUsers: (currentPage = 1, pageSize = 5) => {\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post(\"follow/\".concat(userId));\n  },\n\n  unfollow(userId) {\n    return instance.delete(\"follow/\".concat(userId));\n  },\n\n  getProfile(userId) {\n    console.warn('Obsolete method. Please profileAPI object.');\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(\"profile/\" + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(\"profile/status/\" + userId);\n  },\n\n  updateStatus(status) {\n    return instance.put(\"profile/status\", {\n      status: status\n    });\n  },\n\n  savePhoto(photoFile) {\n    return instance.put(\"profile/photo\", {\n      photoFile\n    });\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(\"auth/me\");\n  },\n\n  login(email, password, rememberMe = false) {\n    return instance.post(\"auth/login\", {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  logout() {\n    return instance.delete(\"auth/login\");\n  }\n\n};","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","authAPI","me","login","email","password","rememberMe","logout"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW,sCADN,CAEL;;AAFK;AAHiB,CAAb,CAAjB;AASA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,EAAE,CAACC,WAAW,GAAG,CAAf,EAAkBC,QAAQ,GAAG,CAA7B,KAAmC;AACzC,WAAOR,QAAQ,CAACS,GAAT,sBAA2BF,WAA3B,oBAAgDC,QAAhD,GACFE,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH,GANmB;;AAOpBC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,WAAOd,QAAQ,CAACe,IAAT,kBAAwBD,MAAxB,EAAP;AACH,GATmB;;AAUpBE,EAAAA,QAAQ,CAACF,MAAD,EAAS;AACb,WAAOd,QAAQ,CAACiB,MAAT,kBAA0BH,MAA1B,EAAP;AACH,GAZmB;;AAapBI,EAAAA,UAAU,CAACJ,MAAD,EAAS;AACfK,IAAAA,OAAO,CAACC,IAAR,CAAa,4CAAb;AACA,WAAOC,UAAU,CAACH,UAAX,CAAsBJ,MAAtB,CAAP;AACH;;AAhBmB,CAAjB;AAkBP,OAAO,MAAMO,UAAU,GAAG;AACtBH,EAAAA,UAAU,CAACJ,MAAD,EAAS;AACf,WAAOd,QAAQ,CAACS,GAAT,CAAa,aAAaK,MAA1B,CAAP;AACH,GAHqB;;AAItBQ,EAAAA,SAAS,CAACR,MAAD,EAAS;AACd,WAAOd,QAAQ,CAACS,GAAT,CAAa,oBAAoBK,MAAjC,CAAP;AACH,GANqB;;AAOtBS,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAOxB,QAAQ,CAACyB,GAAT,mBAA+B;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAA/B,CAAP;AACH,GATqB;;AAUtBE,EAAAA,SAAS,CAACC,SAAD,EAAW;AAEhB,WAAO3B,QAAQ,CAACyB,GAAT,kBAA8B;AAACE,MAAAA;AAAD,KAA9B,CAAP;AACH;;AAbqB,CAAnB;AAeP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,EAAE,GAAG;AACD,WAAO7B,QAAQ,CAACS,GAAT,WAAP;AACH,GAHkB;;AAInBqB,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAU,GAAG,KAA/B,EAAsC;AACvC,WAAOjC,QAAQ,CAACe,IAAT,eAA4B;AAACgB,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KAA5B,CAAP;AACH,GANkB;;AAOnBC,EAAAA,MAAM,GAAG;AACL,WAAOlC,QAAQ,CAACiB,MAAT,cAAP;AACH;;AATkB,CAAhB","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"9ae69435-2b9a-40bc-b874-7a6c240dae36\"\r\n        // \"API-KEY\": \"f6e2860d-1291-43ec-8245-d627ef75db33\" ок, вроде должно работать\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 5) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile){\r\n        \r\n        return instance.put(`profile/photo`, {photoFile})\r\n    }\r\n};\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}