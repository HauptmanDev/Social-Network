{"ast":null,"code":"import _defineProperty from \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { usersAPI } from \"../api/api\";\nimport { updateObjectsInArray } from \"../utils/objects-helpers\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 15,\n  totalUserCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: updateObjectsInArray(state.users, action.userId, 'id', {\n          followed: true\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: updateObjectsInArray(state.users, action.userId, 'id', {\n          followed: false\n        })\n      });\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          users: action.users\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return _objectSpread({}, state, {\n          totalUserCount: action.count\n        });\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : [...state.followingInProgress.filter(id => id != action.userid)]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollowSuccess = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setTotalUsersCount = totalUserCount => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUserCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  };\n};\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n    dispatch(toggleIsFetching(false));\n  };\n};\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode == 0) {\n    dispatch(followSuccess(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport const follow = userId => {\n  return async dispatch => {\n    let apiMethod = usersAPI.follow.bind(userId);\n    let actionCreator = followSuccess;\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    let apiMethod = usersAPI.unfollow.bind(userId);\n    let actionCreator = unfollowSuccess;\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/redux/users-reducer.js"],"names":["usersAPI","updateObjectsInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","count","filter","id","userid","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","response","resultCode","follow","bind","unfollow"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../api/api\";\r\nimport {updateObjectsInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUserCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id != action.userid)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n};\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n};\r\nexport const setTotalUsersCount = (totalUserCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUserCount\r\n    }\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n};\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n\r\n};\r\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.follow.bind(userId);\r\n        let actionCreator = followSuccess;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollow.bind(userId);\r\n        let actionCreator = unfollowSuccess;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}