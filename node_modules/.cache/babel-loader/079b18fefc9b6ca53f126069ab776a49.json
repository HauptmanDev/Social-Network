{"ast":null,"code":"var _jsxFileName = \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from 'react-redux';\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      updateStatus: this.props.updateStatus,\n      status: this.props.status,\n      isOwner: !this.props.match.params.userId,\n      savePhoto: this.props.savePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","withRouter","compose","withAuthRedirect","ProfileContainer","Component","refreshProfile","userId","props","match","params","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","savePhoto","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,YAAnC,QAAsD,6BAAtD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAEA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAE3CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B;AACA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,cAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,KAAmCS,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAA9D,EAAsE;AAClE,WAAKD,cAAL;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,OAAD,oBAAa,KAAKX,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWY,OAA7C;AAAsD,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWR,YAA/E;AACS,MAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWa,MAD5B;AACoC,MAAA,OAAO,EAAE,CAAC,KAAKb,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MADtE;AAC8E,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWc,SADpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,CAAP;AAIH;;AA7B0C;;AAgC/C,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BJ,EAAAA,OAAO,EAAEI,KAAK,CAACC,WAAN,CAAkBL,OADG;AAE9BC,EAAAA,MAAM,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFI;AAG9BV,EAAAA,gBAAgB,EAAEa,KAAK,CAACE,IAAN,CAAWnB,MAHC;AAI9BoB,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAOA,eAAezB,OAAO,CAClBL,OAAO,CAAC0B,eAAD,EAAkB;AAACxB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BE,EAAAA;AAA5B,CAAlB,CADW,EAElBC,UAFkB,EAGlBE,gBAHkB,CAAP,CAIbC,gBAJa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} updateStatus={this.props.updateStatus}\r\n                     status={this.props.status} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"]},"metadata":{},"sourceType":"module"}