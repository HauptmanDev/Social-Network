{"ast":null,"code":"import _defineProperty from \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst DELETE_POST = 'DELETE-POST';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Привет, всем!',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: 'Пока, всем!',\n    likesCount: 1\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 3,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          posts: [...state.posts, newPost]\n        });\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, state, {\n          posts: state.posts.filter(p => {// p.id != action.postId\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => {\n  return {\n    type: ADD_POST,\n    newPostText\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\nexport const deletePost = postId => {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport const getUserProfile = userId => async dispatch => {\n  let response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","addPostActionCreator","setUserProfile","setStatus","deletePost","postId","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, всем!', likesCount: 0},\r\n        {id: 2, message: 'Пока, всем!', likesCount: 1},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost],};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n\r\n            return {\r\n                ...state, posts: state.posts.filter(p => {\r\n                    // p.id != action.postId\r\n                })\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    }\r\n};\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    }\r\n};\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST, postId\r\n    }\r\n};\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n};\r\n\r\nexport const savePhoto = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n};\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}