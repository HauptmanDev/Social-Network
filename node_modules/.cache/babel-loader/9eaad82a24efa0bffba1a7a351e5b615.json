{"ast":null,"code":"import _defineProperty from \"Q:\\\\IT-kam\\\\socnet\\\\Social-Network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Kirill'\n  }, {\n    id: 2,\n    name: 'Igor'\n  }, {\n    id: 3,\n    name: 'Victor'\n  }, {\n    id: 4,\n    name: 'Python'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Give me my money'\n  }, {\n    id: 2,\n    message: 'How are you?'\n  }, {\n    id: 3,\n    message: 'May be Borba'\n  }, {\n    id: 4,\n    message: 'Guuusss???'\n  }]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      {\n        let body = action.newMessageBody;\n        return _objectSpread({}, state, {\n          messages: [...state.messages, {\n            id: 5,\n            message: body\n          }]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = newMessageBody => {\n  return {\n    type: SEND_MESSAGE,\n    newMessageBody: newMessageBody\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["Q:/IT-kam/socnet/Social-Network/src/redux/dialogs-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","sendMessageCreator"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJK,CADM;AAOfC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADM,EAEN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFM,EAGN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHM,EAIN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJM;AAPK,CAAnB;;AAcA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,YAAL;AAAmB;AACf,YAAIW,IAAI,GAAGF,MAAM,CAACG,cAAlB;AACA,iCAAWJ,KAAX;AAAkBH,UAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoB;AAACF,YAAAA,EAAE,EAAE,CAAL;AAAQG,YAAAA,OAAO,EAAEK;AAAjB,WAApB;AAA5B;AACH;;AACD;AACI,aAAOH,KAAP;AANR;AAQH,CATD;;AAUA,OAAO,MAAMK,kBAAkB,GAAID,cAAD,IAAoB;AAClD,SAAO;AACHF,IAAAA,IAAI,EAAEV,YADH;AACiBY,IAAAA,cAAc,EAAEA;AADjC,GAAP;AAGH,CAJM;AAKP,eAAeL,cAAf","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kirill'},\r\n        {id: 2, name: 'Igor'},\r\n        {id: 3, name: 'Victor'},\r\n        {id: 4, name: 'Python'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Give me my money'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'May be Borba'},\r\n        {id: 4, message: 'Guuusss???'}\r\n    ],\r\n};\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {...state, messages: [...state.messages, {id: 5, message: body}],};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE, newMessageBody: newMessageBody\r\n    }\r\n};\r\nexport default dialogsReducer;\r\n"]},"metadata":{},"sourceType":"module"}