{"ast":null,"code":"import _objectSpread from \"Q:\\\\IT-kam\\\\my projects\\\\Social-Network\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZE_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => {\n  return {\n    type: INITIALIZE_SUCCESS\n  };\n};\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["Q:\\IT-kam\\my projects\\Social-Network\\src\\redux\\app-reducer.js"],"names":["getAuthUserData","INITIALIZE_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":";AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,WAAW,EAAE;AAFjB;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHD,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAM;AAC9BJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAFD;AAGH,CALM;AAQP,eAAeJ,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZE_SUCCESS,\r\n    }\r\n};\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}