{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","components/hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","module","exports","formControl","error","formSummaryError","FormControl","_ref","input","_ref$meta","meta","touched","children","hasError","Object","Q_IT_kam_socnet_Social_Network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","Textarea","props","restProps","child","assign","Input","createField","placeholder","name","component","validate","arguments","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Q_IT_kam_socnet_Social_Network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","Q_IT_kam_socnet_Social_Network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","Q_IT_kam_socnet_Social_Network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","Q_IT_kam_socnet_Social_Network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","Q_IT_kam_socnet_Social_Network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","dialogs","diologItems","active","messages","message","Message","react_default","s","diaolog","DialogItem","path","id","diolog","react_router_dom","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsElements","map","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","diologs","diologsItems","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","newMessageBody","react_router","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/6.16df7cb0.chunk.js","sourcesContent":["export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2LJCa\",\"error\":\"FormsControls_error__2DZj0\",\"formSummaryError\":\"FormsControls_formSummaryError__1xWbY\"};","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = '') => {\r\n    return <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validate}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>\r\n};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponenet = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponenet\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__sAJx2\",\"diologItems\":\"Dialogs_diologItems__eSRFK\",\"active\":\"Dialogs_active__1JlhJ\",\"messages\":\"Dialogs_messages__1MfjB\",\"message\":\"Dialogs_message__1SM_D\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.diaolog}>{props.message}</div>\r\n};\r\n\r\nMessage.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport Message from \"../Message/Message\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.diolog + ' ' + s.active}>\r\n        <NavLink to={path}>\r\n            <li>{props.name}</li>\r\n        </NavLink>\r\n    </div>\r\n};\r\nDialogItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n}\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Sent message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n\r\n    if (!props.isAuth) return (\r\n        <Redirect to={'/login'}/>\r\n    );\r\n\r\n    return (\r\n        <div className={s.diologs}>\r\n            <div className={s.diologsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}