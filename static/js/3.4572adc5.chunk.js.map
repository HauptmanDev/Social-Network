{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","descriptionBlock","postsBlock","posts","item","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","Fragment","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","className","s","src","photos","large","ProfileInfo_ProfileStatusWithHooks","Preloader","Post","message","likesCount","MyPosts","memo","postsElement","toConsumableArray","reverse","map","p","MyPosts_Post_Post","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","withRouter"],"mappings":"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","file":"static/js/3.4572adc5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponenet = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponenet\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3C3Nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__FbbSo\",\"posts\":\"MyPosts_posts__2XTfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__kelth\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    };\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    };\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || 'No status'}</span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(true);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>)\r\n};\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQeYdBq_hOb9UcY1YVQXA1gI5c9TyLF997iZKhGZuSupRitkTwRoQ'/>\r\n            {props.message}\r\n            <br/>\r\n            <span>Like</span> {props.likesCount}\r\n        </div>\r\n    );\r\n};\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from './../../../utils/validators/validators'\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return <div className={s.postsBlock}>\r\n        My Posts\r\n        <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' validate={[required, maxLength10]}\r\n                       placeholder={'Post message'}/>\r\n            </div>\r\n            <div>\r\n                <button>App post</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../../redux/dialogs-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} updateStatus={this.props.updateStatus}\r\n                     status={this.props.status}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}