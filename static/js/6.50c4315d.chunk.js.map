{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","formControl","error","formSummaryError","FormControl","_ref","input","_ref$meta","meta","touched","children","hasError","Object","Q_IT_kam_my_projects_Social_Network_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","Textarea","props","restProps","child","assign","Input","createField","placeholder","name","component","validate","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","concat","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Q_IT_kam_my_projects_Social_Network_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","Q_IT_kam_my_projects_Social_Network_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","Q_IT_kam_my_projects_Social_Network_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","Q_IT_kam_my_projects_Social_Network_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","Q_IT_kam_my_projects_Social_Network_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","dialogs","Message","react_default","s","diaolog","message","DialogItem","path","id","diolog","active","react_router_dom","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsElements","map","Dialogs_DialogItem_DialogItem","messagesElements","messages","m","Dialogs_Message_Message","dialogsItems","chat","onClick","dialogsAPI","_sendMessage","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","newMessageBody","react_router","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/6.50c4315d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__35nID\",\"error\":\"FormsControls_error__1-prC\",\"formSummaryError\":\"FormsControls_formSummaryError__mHq3z\"};","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = '') => {\r\n    return <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validate}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>\r\n};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponenet = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponenet\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__38gGy\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.diaolog}>{props.message}</div>\r\n};\r\n\r\nMessage.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport Message from \"../Message/Message\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.diolog + ' ' + s.active}>\r\n        <NavLink to={path}>\r\n            <li>{props.name}</li>\r\n        </NavLink>\r\n    </div>\r\n};\r\nDialogItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n}\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Sent message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport {dialogsAPI} from \"../../api/api\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n\r\n    if (!props.isAuth) return (\r\n        <Redirect to={'/login'}/>\r\n    );\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n            <div className={s.chat}>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <button onClick={()=>{dialogsAPI._sendMessage()}}>Send</button>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}