{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","Q_IT_kam_my_projects_Messenger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","dialogs","diologItems","active","messages","message","Message","react_default","className","s","diaolog","DialogItem","path","id","diolog","react_router_dom","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","diologs","diologsItems","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","newMessageBody","react_router","compose","dispatch","sendMessageCreator"],"mappings":"sMAKIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGnC,OAAKR,KAAKS,MAAMjB,OACTkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OADIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAHTlB,EAAA,CACXmB,IAAMpB,WAQtC,OADsCqB,YAAQ1B,EAAR0B,CAAoCpB,yBChB9EqB,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,YAAA,6BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yHCWHC,EARC,SAACf,GACb,OAAOgB,EAAAd,EAAAC,cAAA,OAAKc,UAAWC,IAAEC,SAAUnB,EAAMc,UCa9BM,EAZI,SAACpB,GAChB,IAAIqB,EAAO,YAAcrB,EAAMsB,GAC/B,OAAON,EAAAd,EAAAC,cAAA,OAAKc,UAAWC,IAAEK,OAAS,IAAML,IAAEN,QACtCI,EAAAd,EAAAC,cAACqB,EAAA,EAAD,CAASnB,GAAIgB,GACTL,EAAAd,EAAAC,cAAA,UAAKH,EAAMyB,kDCLjBC,EAAcC,YAAiB,IAoBtBC,cAAU,CAACC,KAAM,2BAAjBD,CAlBQ,SAAC5B,GACpB,OACIgB,EAAAd,EAAAC,cAAA,QAAM2B,SAAU9B,EAAM+B,cAClBf,EAAAd,EAAAC,cAAA,WACIa,EAAAd,EAAAC,cAAC6B,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBD,KAAK,iBACLY,YAAY,wBAEpBrB,EAAAd,EAAAC,cAAA,WACIa,EAAAd,EAAAC,cAAA,kCCmBDmC,EA9BC,SAACtC,GACb,IAAIlB,EAAQkB,EAAMuC,YACdC,EAAkB1D,EAAM4B,QAAQ+B,IAAI,SAAAC,GAAC,OAAI1B,EAAAd,EAAAC,cAACwC,EAAD,CAAYlB,KAAMiB,EAAEjB,KAAM3B,IAAK4C,EAAEpB,GAAIA,GAAIoB,EAAEpB,OACpFsB,EAAmB9D,EAAM+B,SAAS4B,IAAI,SAAAI,GAAC,OAAI7B,EAAAd,EAAAC,cAAC2C,EAAD,CAAShC,QAAS+B,EAAE/B,QAAShB,IAAK+C,EAAEvB,OASnF,OAAKtB,EAAMjB,OAKPiC,EAAAd,EAAAC,cAAA,OAAKc,UAAWC,IAAE6B,SACd/B,EAAAd,EAAAC,cAAA,OAAKc,UAAWC,IAAE8B,cACbR,GAELxB,EAAAd,EAAAC,cAAA,OAAKc,UAAWC,IAAEL,UACb+B,GAEL5B,EAAAd,EAAAC,cAAC8C,EAAD,CAAgBnB,SAjBJ,SAACoB,GACjBlD,EAAMmD,YAAYD,EAAOE,oBAKzBpC,EAAAd,EAAAC,cAACkD,EAAA,EAAD,CAAUhD,GAAI,oCCCPiD,sBAAQ/C,YAdC,SAACzB,GACrB,MAAO,CACHyD,YAAazD,EAAMyD,cAIA,SAACgB,GACxB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,QAK6BnE,IAAtDqE,CAAwEhB","file":"static/js/4.4313602f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponenet = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponenet\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__YhZdi\",\"diologItems\":\"Dialogs_diologItems__3IDSG\",\"active\":\"Dialogs_active__3dJI8\",\"messages\":\"Dialogs_messages__4uyjZ\",\"message\":\"Dialogs_message__2T2Hu\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.diaolog}>{props.message}</div>\r\n};\r\n\r\nMessage.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport Message from \"../Message/Message\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.diolog + ' ' + s.active}>\r\n        <NavLink to={path}>\r\n            <li>{props.name}</li>\r\n        </NavLink>\r\n    </div>\r\n};\r\nDialogItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n}\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Sent message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n\r\n    if (!props.isAuth) return (\r\n        <Redirect to={'/login'}/>\r\n    );\r\n\r\n    return (\r\n        <div className={s.diologs}>\r\n            <div className={s.diologsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}